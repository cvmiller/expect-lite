.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
.\" Man Page for expect-lite - initial version - created 7/19/2010
.\" Updated Man Page for expect-lite - version 3.7.0	7/31/2010
.\"
.TH EXPECT-LITE "1" "July 2010" "expect-lite " "User Commands"
.SH NAME
expect-lite \- a quick and easy command line automation tool
.SH SYNOPSIS
.B expect-lite 
[\fI\-vv\fR] \fI-c <script>\fR [\fI-r <host>\fR]  [\fICONSTANT=value\fR]
.br
or
.br
.B expect-lite 
[\fI\-vv\fR] \fIc=<script>\fR  [\fIr=<host>\fR] [\fICONSTANT=value\fR]
.SH DESCRIPTION
.ds sd \fIexpect-lite\fP
.PP
Written in Expect, it is designed to directly map an interactive terminal session into an
automation script. expect-lite scripts use punctuation character(s) at the beginning of each line
to indicate the action. Basic expect-lite scripts can be created by simply cutting and pasting
text from a terminal window into a script, and adding '>' '<' characters. Knowledge of
Expect is not required.

.PP
usage: expect\-lite remote_host=<remote_host_IP> cmd_file=<command_file> [user_dir=<user_dir>] [const1=value1]
.PP
or short form: expect\-lite r=<remote_host_IP> c=<command_file> [d=<user_dir>] [const1=value1]
eg. ./expect\-lite r=host\-008  c=pm_alternation.elt  d=/local/craig/SW_6_Mar/sw myvar=myvalue
.TP
additional login options: user_name=<username> user_password=<password>
.TP
eg. ./expect\-lite r=host\-008 c=pm_alternation.elt u=superuser p=mysecret
.IP
additional debug options: \fB\-v\fR|\fB\-vv\fR|\fB\-\-verbose\fR
.TP
\fB\-v\fR
prints warnings, and infos (i.e. conditionals, dynamic var assignments)
.TP
\fB\-vv\fR|\fB\-\-verbose\fR
prints warnings and debug (i.e. expect match info)
.TP
eg. ./expect\-lite \-v r=host\-008 c=pm_alternation.elt
.SS "If set, the following environment variables will be used:"
.br
EL_REMOTE_HOST
.br
EL_CMD_FILE
.br
EL_USER_DIR
.br
EL_*
.PP

.SH
COMMAND SYNOPSIS
.PP
This  is  just a brief synopsis of \*(sd commands to serve as a reminder to those who already
know \*(sd;  other  documentation  (such  as  the  html  document)  must  be  consulted  for 
fuller descriptions.
.SS
Special Characters
.TP
>
wait for a prompt, then send string to the remote host
.TP
>>
send string to remote host, without waiting for prompt 

.TP
<
string/regex MUST be received from the remote host in the alloted timeout or the script will FAIL! 
.TP
<< 	
literal string MUST be received (similar to '<' without regex evaluation)
.TP
-<
NOT expect, if string/regex IS received from the remote host the script will FAIL! 
.TP
#
used to indicate comment lines, and have no effect
.TP
;
are also used to indicate comment lines, but are printed to stdout (for logging)
.TP
;;
similar to above, but no extra newlines are printed (useful for printing script help)
.TP
@num
changes the expect timeout to num of seconds
.TP
$var=
static variable assignment at script invocation 
.TP
+$var=
.RI
dynamic variable assignment  
.TP
+$var
increment value of $var by 1 decimal 
.TP
-$var
decrement value of $var by 1 decimal
.TP
=$var
math functions, perform bitwise and arithmetic operations:  << >> & | ^ * / % + - (see math functions)
.TP
!
indicates an embedded expect line 
.TP
?
c-style if/then/else in the format ?cond?action::else_action 
.TP
%
label - used for jumping to labels 
.TP
~\fIfilename\fP
includes a expect-lite automation file, useful for creation of common variable files, or 'subprograms/subroutines'


.P
.SS
Directives
.TP
*~\fIfilename\fP
Include a fail script, which expect-lite runs only if the main script fails 
.TP
*/prompt/
Set a user defined prompt (defined in regex)
.TP
*TERM
Immediately terminates script, but returns 0 (pass) 
.TP
*FAIL
Immediately fails script, and returns 1 (fail) 
.TP
**SHELL=<shell>
Configuration directive which sets the shell imediately after automatic login to remote host (see setting the shell)
.TP
*INTERACT
A breakpoint which places user in interact mode, and pauses the script and turns control of the keyboard over to the user 
.TP
*FORK <session>
Multiple session support. Directs expect-lite to open a new session and spawns a newshell 
.TP
*SHOW VARS
Debug information, displays all expect-lite variables. Can be used in interact mode.
.TP
*EOLS LF|*EOLS CRLF
Controls end of line sequence sent to remote host, either line feed, or carriage return + line feed.

.P
.SS
Logging
.TP
*INFO|*NOINFO
Enable/disable informational messages 
.TP
*WARN|*NOWARN
Enable/disable warning messages
.TP
*DEBUG|*NODEBUG
Enable/disable debug messages
.TP
*NOCOLOR
Disables color on stdout

.SH AUTHOR
Written by Craig Miller
.SH "REPORTING BUGS"
Report bugs to <cvmiller at gmail dot com>.
.SH COPYRIGHT
Copyright \(co 2007-2010 FreeScale Semiconductor and Craig Miller
.br
License BSD-Style: 
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
The full documentation for 
.B
expect-lite
is maintained as an HTML manual. Please see http://expect-lite.sf.net/ for complete documentation.
